// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/dbinfo": {
            "get": {
                "description": "Returns version and connection status information about the database",
                "tags": [
                    "health"
                ],
                "summary": "Database information endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "returns the health status of the API",
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/whatsapp/send": {
            "post": {
                "description": "Sends a WhatsApp message to the specified number",
                "tags": [
                    "whatsapp"
                ],
                "summary": "Send a WhatsApp message",
                "parameters": [
                    {
                        "description": "Message details",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/whatsapp.OutgoingMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/whatsapp.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/whatsapp.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/whatsapp.MessageResponse"
                        }
                    }
                }
            }
        },
        "/whatsapp/webhook": {
            "get": {
                "description": "Verifies the WhatsApp webhook with Meta's verification challenge",
                "tags": [
                    "whatsapp"
                ],
                "summary": "Verify WhatsApp webhook",
                "responses": {
                    "200": {
                        "description": "Challenge response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Verification failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Process incoming WhatsApp webhook notifications",
                "tags": [
                    "whatsapp"
                ],
                "summary": "Receive a WhatsApp webhook",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/whatsapp.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/whatsapp.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/whatsapp.MessageResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "whatsapp.MessageResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "whatsapp.OutgoingMessage": {
            "type": "object",
            "properties": {
                "media_url": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "hi"
                },
                "to": {
                    "type": "string",
                    "example": "6598232744"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT Authorization header using the Bearer scheme",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:1323",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "waOdoo API",
	Description:      "API server with WhatsApp Business API integration, PostgreSQL database, and Scalar docs.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
